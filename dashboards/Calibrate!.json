{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "Calibrate your sensors",
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1590634434094,
  "links": [],
  "panels": [
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "Home Assistant",
      "decimals": 1,
      "fill": 0,
      "fillGradient": 0,
      "gridPos": {
        "h": 12,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "hiddenSeries": false,
      "id": 2,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": true,
        "rightSide": true,
        "show": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [
        {
          "alias": "/raw/",
          "yaxis": 2
        },
        {}
      ],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "alias": "$tag_entity_id",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "entity_id"
              ],
              "type": "tag"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "$measurement",
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "entity_id",
              "operator": "=~",
              "value": "/^$source_sensor$/"
            }
          ]
        },
        {
          "alias": "$tag_entity_id",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "entity_id"
              ],
              "type": "tag"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "measurement": "raw",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"raw\" WHERE (\"entity_id\" =~ /^$raw_sensors$/) AND $timeFilter GROUP BY time($__interval), \"entity_id\" fill(null)",
          "rawQuery": false,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "entity_id",
              "operator": "=~",
              "value": "/^$raw_sensors$/"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "$measurement & Raw Readings",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "short",
          "label": "Reference",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "decimals": 1,
          "format": "short",
          "label": "Raw",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": true,
        "alignLevel": null
      }
    },
    {
      "datasource": null,
      "gridPos": {
        "h": 7,
        "w": 10,
        "x": 0,
        "y": 12
      },
      "header_js": "{}",
      "id": 6,
      "method": "GET",
      "mode": "trustedHtml",
      "options": {},
      "params_js": "{\n time_range_start:ctrl.range.from.format('x'),  // x is unix ms timestamp\n time_range_end:ctrl.range.to.format('x'), \n interval: ctrl.template('$__interval'),\n raw_sensors: ctrl.template('${raw_sensors:csv}'),\n measurement: ctrl.template('${measurement}'),\n}",
      "request": "http",
      "responseType": "text",
      "showErrors": true,
      "showTime": false,
      "showTimeFormat": "LTS",
      "showTimePrefix": null,
      "showTimeValue": "request",
      "skipSameURL": false,
      "templateResponse": true,
      "timeFrom": null,
      "timeShift": null,
      "title": "Calibrate (Linear) $measurement Sensors",
      "type": "ryantxu-ajax-panel",
      "url": "https://ummon.$domain/api/sensor/$source_sensor/calibrate/",
      "withCredentials": false
    },
    {
      "datasource": null,
      "gridPos": {
        "h": 6,
        "w": 10,
        "x": 10,
        "y": 12
      },
      "header_js": "{}",
      "id": 8,
      "method": "GET",
      "mode": "trustedHtml",
      "options": {},
      "params_js": "{\n from:ctrl.range.from.format('x'),  // x is unix ms timestamp\n to:ctrl.range.to.format('x'), \n height:ctrl.height,\n now:Date.now(),\n interval: ctrl.template('$__interval'),\n sample: 'Not escaped: $__interval',\n since:ctrl.lastRequestTime,\n retain: false,\n}",
      "request": "http",
      "responseType": "text",
      "showErrors": true,
      "showTime": false,
      "showTimeFormat": "LTS",
      "showTimePrefix": null,
      "showTimeValue": "request",
      "skipSameURL": true,
      "templateResponse": true,
      "timeFrom": null,
      "timeShift": null,
      "title": "Manual PSI Input",
      "type": "ryantxu-ajax-panel",
      "url": "https://ummon.$domain/seedship/water_supply_01/psi_manual_input",
      "withCredentials": false
    }
  ],
  "refresh": false,
  "schemaVersion": 21,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": null,
        //"current": {
        //  "text": "PSI",
        //  "value": "PSI"
        //},
        "datasource": "Home Assistant",
        "definition": "SHOW MEASUREMENTS ON home_assistant WHERE \"entity_id\" =~ /()/",
        "hide": 0,
        "includeAll": false,
        "label": "Measurement",
        "multi": false,
        "name": "measurement",
        "options": [],
        "query": "SHOW MEASUREMENTS ON home_assistant WHERE \"entity_id\" =~ /()/",
        "refresh": 1,
        "regex": "/^\\w+$/",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        //"current": {
        //  "text": "seedship_ss_water_system_psi_manual",
        //  "value": "seedship_ss_water_system_psi_manual"
        //},
        "datasource": "Home Assistant",
        "definition": "\nSHOW TAG VALUES ON \"home_assistant\" WITH KEY = \"entity_id\"  WHERE  \"entity_id\" !~ /_raw/",
        "hide": 0,
        "includeAll": false,
        "label": "Source Sensor",
        "multi": false,
        "name": "source_sensor",
        "options": [],
        "query": "\nSHOW TAG VALUES ON \"home_assistant\" WITH KEY = \"entity_id\"  WHERE  \"entity_id\" !~ /_raw/",
        "refresh": 2,
        "regex": "/[[measurement]]/i",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "seedship_water_supply_01_bus_psi_raw",
          "value": [
            "seedship_water_supply_01_bus_psi_raw"
          ]
        },
        "datasource": "Home Assistant",
        "definition": "SHOW TAG VALUES ON \"home_assistant\" WITH KEY = \"entity_id\"  WHERE \"entity_id\" =~ /_raw$/ ",
        "hide": 0,
        "includeAll": true,
        "label": "Calibrate Sensors",
        "multi": true,
        "name": "raw_sensors",
        "options": [],
        "query": "SHOW TAG VALUES ON \"home_assistant\" WITH KEY = \"entity_id\"  WHERE \"entity_id\" =~ /_raw$/ ",
        "refresh": 2,
        "regex": "/[[measurement]]/i",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": false,
          "text": "spencerslab.duckdns.org",
          "value": "spencerslab.duckdns.org"
        },
        "hide": 2,
        "label": "Domain",
        "name": "domain",
        "options": [
          {
            //"selected": true,
            "text": "spencerslab.duckdns.org",
            "value": "spencerslab.duckdns.org"
          }
        ],
        "query": "spencerslab.duckdns.org",
        "skipUrlSync": false,
        "type": "constant"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "Calibrate!",
  "uid": "XaKO_DzGz",
  "version": 14
}